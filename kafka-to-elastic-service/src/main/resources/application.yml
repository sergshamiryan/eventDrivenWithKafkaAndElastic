spring:
  application:
    name: kafka-to-elastic-service
  profiles:
    active: kafka_to_elastic

server:
  port: 8182

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic

kafka-consumer-config:
  #Kafa key deserializer which is long
  key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
  #  Kafka value deserializer which is Avro Type
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  #  Ensures that we dont start every time from beginning and that offset remains for the last read item
  consumer-group-id: twitter-topic-consumer
  #  We mention that we want to start reading from the beginning of the partition
  auto-offset-reset: earliest
  #  Since we work with avro type we have to set this properties to true to in the consumer config
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  #  For consuming the data in batches
  batch-listener: true
  #  We want to start listening to topic after checking that the topic is there so we set auto startup to false
  auto-startup: true
  # Sets the number of threads to work on consuming, which is equal to partition number
  concurrency-level: 3
  #  Broker needs to get at least one heartbeat signal from consumer, otherwise will mark the consumer as dead,def 10 sec
  session-timeout-ms: 10000
  # Frequency of sending heartbeat signal by the consumer, 3 sec default, it is recommended to miss a few signals before
  # marking as dead so we use 1/3 of timout ms to get at least 3 signals
  heartbeat-interval-ms: 3000
  # For user threads, if message processing logic is to heavy and exceed this time Coordinator explicitly
  #  have the consumer leave the group and also triggers a new round of rebalance.
  max-poll-interval-ms: 300000
  #  Maximum records, then max bytes to fetch in each poll
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  #  How long we will wait until at least one record is available
  poll-timeout-ms: 150


retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000